[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include stealthburner_leds.cfg]
[include macros.cfg]
[include Zerog_Purge.cfg]

#####################################################################
# 	General Setup
#####################################################################

[printer]
kinematics: corexy
max_velocity: 300 #600
max_accel: 3000 #5000
max_z_velocity: 5
max_z_accel: 50

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[respond]

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu]
canbus_uuid: eda556af8838
#canbus_interface: can0

[mcu EBBCan]
canbus_uuid: 7beb2bc5841d
#canbus_interface: can0

[mcu eddy]
canbus_uuid: df0e5308fc76

#[firmware_retraction]
#retract_length: 40
#retract_speed: 40
#unretract_extra_length: 10 # Increase if not primed enough when starting, decrease if over primed
#unretract_speed: 25

#####################################################################
# 	X & Y Steppers
#####################################################################

# X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE2
dir_pin: !PB4
enable_pin: !PC11
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ~EBBCan: gpio24
position_min: -12.0
position_endstop: 282.5
position_max: 282.5
homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC10
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

# Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PF12
dir_pin: !PF11
enable_pin: !PB3
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PF4
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PF13
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Steppers
#####################################################################

# Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PF10
rotation_distance: 2    
microsteps: 128
endstop_pin: ^!EBBCan: gpio22
position_max: 265
position_endstop: 0
position_min: -2
homing_speed: 8.0
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PF9
run_current: 0.580
stealthchop_threshold: 999999

#	Z1 Stepper - Rear  on Motor5
[stepper_z1]
step_pin: PD3
dir_pin: !PD2
enable_pin: !PD5
rotation_distance: 2  
microsteps: 128

[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: true
run_current: 0.580
stealthchop_threshold: 999999

#	Z2 Stepper - Front Right on Motor6
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1
rotation_distance: 2 
microsteps: 128

[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: true
run_current: 0.580
stealthchop_threshold: 999999

#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin: EBBCan: gpio18
dir_pin: EBBCan: gpio19
enable_pin: !EBBCan: gpio17
microsteps: 16
rotation_distance: 46.565
gear_ratio: 9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: gpio7
sensor_type: MAX31865
sensor_pin: EBBCan: gpio9
spi_software_sclk_pin: EBBCan: gpio10
spi_software_mosi_pin: EBBCan: gpio8
spi_software_miso_pin: EBBCan: gpio11
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2
min_temp: 1
max_temp: 300
max_power: 1.0
min_extrude_temp: 1
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: EBBCan: gpio20
interpolate: false
run_current: 0.6
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
heater_pin: PB5 
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA0
min_temp: 0
max_temp: 130

#####################################################################
# 	Probe,  Bed Mesh, & Homing
#####################################################################

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
#i2c_address:
#i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
#i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: 21.42

#[bed_mesh]
#speed: 150 #200
#horizontal_move_z: 5
#mesh_min: 10, 0
#mesh_max: 260, 250
#probe_count: 5, 5
#adaptive_margin: 5

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 31.42, 0
mesh_max: 260, 250
probe_count: 9, 9
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position: 135.5, 125
speed: 100
z_hop: 10

[z_tilt]
z_positions: # Location of bed pivot points
    -50, 18
    125, 298
    300, 18
points: # Back Middle, Front Left, Front Right # Probing Points
    135.5, 250
    8, 0
    263, 0
speed: 150 #200
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075

#####################################################################
# 	Resonance Compensation
#####################################################################

[adxl345]
cs_pin: EBBCan: gpio1
spi_software_sclk_pin: EBBCan: gpio2
spi_software_mosi_pin: EBBCan: gpio0
spi_software_miso_pin: EBBCan: gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 135.5, 125, 20
accel_chip: adxl345

#####################################################################
# 	Sensors
#####################################################################

[temperature_sensor EBB_2209] #EBB_NTC
sensor_type: Generic 3950
sensor_pin: EBBCan: gpio28

[temperature_sensor BTT_EDDY]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

##[filament_motion_sensor encoder_sensor]
##detection_length: 7
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
##extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
##switch_pin: PC5
# changing the switch_pin name according to your motherboard
#pause_on_runout: True
##runout_gcode: FILAMENT_RUNOUT
#insert_gcode:
#event_delay:
#pause_delay:

#####################################################################
# 	Fan Control
#####################################################################

#	Part Cooling Fan
[fan]
pin: EBBCan: gpio13
kick_start_time: 0.5
off_below: 0.10

#	Hotend Fan
[heater_fan hotend_fan]
pin: EBBCan: gpio14
max_power: 1
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

# MCU Fan
[temperature_fan Manta_M8P]
pin: PE0
max_power: 1
control: watermark
max_delta: 2
sensor_type: temperature_mcu
min_temp: 10
max_temp: 80
target_temp: 20
shutdown_speed: 0.0

# CB1 Fan
[temperature_fan CB1]
pin: PC12
max_power: 1
control: watermark
max_delta: 2
sensor_type: temperature_host
min_temp: 10
max_temp: 80
target_temp: 20
shutdown_speed: 0.0

#####################################################################
# 	Spoolman
#####################################################################

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.197
#*# pid_ki = 2.084
#*# pid_kd = 59.098
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 48.146
#*# pid_ki = 2.058
#*# pid_kd = 281.652
#*#
#*# [probe]
#*# z_offset = -0.430
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.034219, 0.018594, 0.045312, 0.025078, -0.005625, -0.050391
#*# 	-0.027422, 0.019219, 0.037500, 0.021562, -0.006016, -0.055781
#*# 	-0.053516, 0.014375, 0.007969, -0.011172, -0.027891, -0.053516
#*# 	-0.089844, -0.035938, -0.027891, -0.023594, -0.048594, -0.070703
#*# 	-0.125078, -0.075625, -0.048281, -0.029844, -0.062500, -0.089141
#*# 	-0.134922, -0.077344, -0.049688, -0.035938, -0.042734, -0.051172
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 245.0
#*# min_y = 30.0
#*# max_y = 235.0
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 85.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 67.0
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
